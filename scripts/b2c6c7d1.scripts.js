"use strict";angular.module("burnApp",["ui.router"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/"),a.state("main",{url:"/",templateUrl:"views/main.html",controller:"MainCtrl"}).state("milestones",{url:"/:owner/:repo/milestones",templateUrl:"views/milestones.html",controller:"MilestonesCtrl"}).state("milestones.burnup",{url:"/:number",templateUrl:"views/burnup.html",controller:"BurnUpCtrl"})}]),angular.module("burnApp").controller("MainCtrl",["$scope","$location",function(a,b){a.go=function(a){b.path(a+"/milestones")}}]),angular.module("burnApp").controller("BurnUpCtrl",["$scope","$stateParams","Issues",function(a,b,c){var d=function(a){angular.forEach(a,function(a){a.created_at=moment(a.created_at),null!==a.closed_at&&(a.closed_at=moment(a.closed_at))});var b,c={title:{text:"Burn-up"},xAxis:{categories:[]},yAxis:{title:{text:"Issues"},allowDecimals:!1},series:[{name:"Total",type:"line",step:"left",data:[]},{name:"Closed",type:"areaspline",data:[]}]},d=moment(a[0].milestone.created_at);for(b=null==a[0].milestone.due_on?moment():moment(a[0].milestone.due_on);!d.isAfter(b,"day");){c.xAxis.categories.push(d.format("L"));var e=0,f=0,g=0;angular.forEach(a,function(a){(d.isSame(a.created_at,"day")||d.isAfter(a.created_at,"day"))&&(e++,"open"===a.state||d.isBefore(a.closed_at,"day")?f++:g++)}),c.series[0].data.push(e),c.series[1].data.push(g),d.add("days",1)}$("#chart").highcharts(c)},e=function(){var a=c.query(b.owner,b.repo,b.number);a.then(function(a){d(a)},function(a){alert("Failed: "+a)})};e()}]),angular.module("burnApp").factory("Issues",["$q","$http",function(a,b){return{query:function(c,d,e){var f=a.defer();b.get("https://api.github.com/repos/"+c+"/"+d+"/issues?state=open&milestone="+e).success(function(a){f.resolve(a)}).error(function(){f.resolve([])});var g=a.defer();b.get("https://api.github.com/repos/"+c+"/"+d+"/issues?state=closed&milestone="+e).success(function(a){g.resolve(a)}).error(function(){g.resolve([])});var h=a.defer();return a.all([f.promise,g.promise]).then(function(a){var b=a[0].concat(a[1]);h.resolve(b)},function(a){h.reject(a)}),h.promise}}}]),angular.module("burnApp").controller("MilestonesCtrl",["$scope","$stateParams","Milestones","$state",function(a,b,c,d){var e=function(){if(void 0===a.milestones){var d=c.query(b.owner,b.repo);d.then(function(b){a.milestones=b},function(a){alert("Failed: "+a)})}};e(),a.go=function(a){d.go("milestones.burnup",{number:a})}}]),angular.module("burnApp").factory("Milestones",["$q","$http",function(a,b){var c=function(a){var b={};return angular.forEach(a,function(a){this[a.number]=a},b),b};return{query:function(d,e){var f=a.defer();b.get("https://api.github.com/repos/"+d+"/"+e+"/milestones?state=open").success(function(a){f.resolve(a)}).error(function(){f.resolve([])});var g=a.defer();b.get("https://api.github.com/repos/"+d+"/"+e+"/milestones?state=closed").success(function(a){g.resolve(a)}).error(function(){g.resolve([])});var h=a.defer();return a.all([f.promise,g.promise]).then(function(a){var b=a[0].concat(a[1]);h.resolve(c(b))},function(a){h.reject(a)}),h.promise}}}]);